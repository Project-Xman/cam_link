// Mocks generated by Mockito 5.4.5 from annotations
// in photo_uploader/test/app/data/services/appwrite_auth_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:appwrite/appwrite.dart' as _i9;
import 'package:appwrite/enums.dart' as _i10;
import 'package:appwrite/models.dart' as _i4;
import 'package:appwrite/src/client.dart' as _i3;
import 'package:appwrite/src/enums.dart' as _i8;
import 'package:appwrite/src/response.dart' as _i2;
import 'package:appwrite/src/upload_progress.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_2 extends _i1.SmartFake implements _i4.User {
  _FakeUser_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdentityList_3 extends _i1.SmartFake implements _i4.IdentityList {
  _FakeIdentityList_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJwt_4 extends _i1.SmartFake implements _i4.Jwt {
  _FakeJwt_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLogList_5 extends _i1.SmartFake implements _i4.LogList {
  _FakeLogList_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMfaType_6 extends _i1.SmartFake implements _i4.MfaType {
  _FakeMfaType_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMfaChallenge_7 extends _i1.SmartFake implements _i4.MfaChallenge {
  _FakeMfaChallenge_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSession_8 extends _i1.SmartFake implements _i4.Session {
  _FakeSession_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMfaFactors_9 extends _i1.SmartFake implements _i4.MfaFactors {
  _FakeMfaFactors_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMfaRecoveryCodes_10 extends _i1.SmartFake
    implements _i4.MfaRecoveryCodes {
  _FakeMfaRecoveryCodes_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePreferences_11 extends _i1.SmartFake implements _i4.Preferences {
  _FakePreferences_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeToken_12 extends _i1.SmartFake implements _i4.Token {
  _FakeToken_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSessionList_13 extends _i1.SmartFake implements _i4.SessionList {
  _FakeSessionList_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTarget_14 extends _i1.SmartFake implements _i4.Target {
  _FakeTarget_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocumentList_15 extends _i1.SmartFake implements _i4.DocumentList {
  _FakeDocumentList_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocument_16 extends _i1.SmartFake implements _i4.Document {
  _FakeDocument_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i3.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, String> get config =>
      (super.noSuchMethod(
            Invocation.getter(#config),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  set config(Map<String, String>? _config) => super.noSuchMethod(
    Invocation.setter(#config, _config),
    returnValueForMissingStub: null,
  );

  @override
  String get endPoint =>
      (super.noSuchMethod(
            Invocation.getter(#endPoint),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#endPoint),
            ),
          )
          as String);

  @override
  _i6.Future<dynamic> webAuth(Uri? url, {String? callbackUrlScheme}) =>
      (super.noSuchMethod(
            Invocation.method(
              #webAuth,
              [url],
              {#callbackUrlScheme: callbackUrlScheme},
            ),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i2.Response<dynamic>> chunkedUpload({
    required String? path,
    required Map<String, dynamic>? params,
    required String? paramName,
    required String? idParamName,
    required Map<String, String>? headers,
    dynamic Function(_i7.UploadProgress)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#chunkedUpload, [], {
              #path: path,
              #params: params,
              #paramName: paramName,
              #idParamName: idParamName,
              #headers: headers,
              #onProgress: onProgress,
            }),
            returnValue: _i6.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(#chunkedUpload, [], {
                  #path: path,
                  #params: params,
                  #paramName: paramName,
                  #idParamName: idParamName,
                  #headers: headers,
                  #onProgress: onProgress,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.Response<dynamic>>);

  @override
  _i3.Client setSelfSigned({bool? status = true}) =>
      (super.noSuchMethod(
            Invocation.method(#setSelfSigned, [], {#status: status}),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#setSelfSigned, [], {#status: status}),
            ),
          )
          as _i3.Client);

  @override
  _i3.Client setEndpoint(String? endPoint) =>
      (super.noSuchMethod(
            Invocation.method(#setEndpoint, [endPoint]),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#setEndpoint, [endPoint]),
            ),
          )
          as _i3.Client);

  @override
  _i3.Client setEndPointRealtime(String? endPoint) =>
      (super.noSuchMethod(
            Invocation.method(#setEndPointRealtime, [endPoint]),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#setEndPointRealtime, [endPoint]),
            ),
          )
          as _i3.Client);

  @override
  _i3.Client setProject(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setProject, [value]),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#setProject, [value]),
            ),
          )
          as _i3.Client);

  @override
  _i3.Client setJWT(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setJWT, [value]),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#setJWT, [value]),
            ),
          )
          as _i3.Client);

  @override
  _i3.Client setLocale(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setLocale, [value]),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#setLocale, [value]),
            ),
          )
          as _i3.Client);

  @override
  _i3.Client setSession(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setSession, [value]),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#setSession, [value]),
            ),
          )
          as _i3.Client);

  @override
  _i3.Client setDevKey(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setDevKey, [value]),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#setDevKey, [value]),
            ),
          )
          as _i3.Client);

  @override
  _i3.Client addHeader(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#addHeader, [key, value]),
            returnValue: _FakeClient_1(
              this,
              Invocation.method(#addHeader, [key, value]),
            ),
          )
          as _i3.Client);

  @override
  _i6.Future<String> ping() =>
      (super.noSuchMethod(
            Invocation.method(#ping, []),
            returnValue: _i6.Future<String>.value(
              _i5.dummyValue<String>(this, Invocation.method(#ping, [])),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<_i2.Response<dynamic>> call(
    _i8.HttpMethod? method, {
    String? path = '',
    Map<String, String>? headers = const {},
    Map<String, dynamic>? params = const {},
    _i8.ResponseType? responseType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #call,
              [method],
              {
                #path: path,
                #headers: headers,
                #params: params,
                #responseType: responseType,
              },
            ),
            returnValue: _i6.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #call,
                  [method],
                  {
                    #path: path,
                    #headers: headers,
                    #params: params,
                    #responseType: responseType,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [Account].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccount extends _i1.Mock implements _i9.Account {
  MockAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_1(this, Invocation.getter(#client)),
          )
          as _i3.Client);

  @override
  _i6.Future<_i4.User> get() =>
      (super.noSuchMethod(
            Invocation.method(#get, []),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(this, Invocation.method(#get, [])),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.User> create({
    required String? userId,
    required String? email,
    required String? password,
    String? name,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {
              #userId: userId,
              #email: email,
              #password: password,
              #name: name,
            }),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(
                this,
                Invocation.method(#create, [], {
                  #userId: userId,
                  #email: email,
                  #password: password,
                  #name: name,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.User> updateEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(
                this,
                Invocation.method(#updateEmail, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.IdentityList> listIdentities({List<String>? queries}) =>
      (super.noSuchMethod(
            Invocation.method(#listIdentities, [], {#queries: queries}),
            returnValue: _i6.Future<_i4.IdentityList>.value(
              _FakeIdentityList_3(
                this,
                Invocation.method(#listIdentities, [], {#queries: queries}),
              ),
            ),
          )
          as _i6.Future<_i4.IdentityList>);

  @override
  _i6.Future<dynamic> deleteIdentity({required String? identityId}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteIdentity, [], {#identityId: identityId}),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.Jwt> createJWT() =>
      (super.noSuchMethod(
            Invocation.method(#createJWT, []),
            returnValue: _i6.Future<_i4.Jwt>.value(
              _FakeJwt_4(this, Invocation.method(#createJWT, [])),
            ),
          )
          as _i6.Future<_i4.Jwt>);

  @override
  _i6.Future<_i4.LogList> listLogs({List<String>? queries}) =>
      (super.noSuchMethod(
            Invocation.method(#listLogs, [], {#queries: queries}),
            returnValue: _i6.Future<_i4.LogList>.value(
              _FakeLogList_5(
                this,
                Invocation.method(#listLogs, [], {#queries: queries}),
              ),
            ),
          )
          as _i6.Future<_i4.LogList>);

  @override
  _i6.Future<_i4.User> updateMFA({required bool? mfa}) =>
      (super.noSuchMethod(
            Invocation.method(#updateMFA, [], {#mfa: mfa}),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(this, Invocation.method(#updateMFA, [], {#mfa: mfa})),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.MfaType> createMfaAuthenticator({
    required _i10.AuthenticatorType? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMfaAuthenticator, [], {#type: type}),
            returnValue: _i6.Future<_i4.MfaType>.value(
              _FakeMfaType_6(
                this,
                Invocation.method(#createMfaAuthenticator, [], {#type: type}),
              ),
            ),
          )
          as _i6.Future<_i4.MfaType>);

  @override
  _i6.Future<_i4.MfaType> createMFAAuthenticator({
    required _i10.AuthenticatorType? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMFAAuthenticator, [], {#type: type}),
            returnValue: _i6.Future<_i4.MfaType>.value(
              _FakeMfaType_6(
                this,
                Invocation.method(#createMFAAuthenticator, [], {#type: type}),
              ),
            ),
          )
          as _i6.Future<_i4.MfaType>);

  @override
  _i6.Future<_i4.User> updateMfaAuthenticator({
    required _i10.AuthenticatorType? type,
    required String? otp,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMfaAuthenticator, [], {
              #type: type,
              #otp: otp,
            }),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(
                this,
                Invocation.method(#updateMfaAuthenticator, [], {
                  #type: type,
                  #otp: otp,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.User> updateMFAAuthenticator({
    required _i10.AuthenticatorType? type,
    required String? otp,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMFAAuthenticator, [], {
              #type: type,
              #otp: otp,
            }),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(
                this,
                Invocation.method(#updateMFAAuthenticator, [], {
                  #type: type,
                  #otp: otp,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<dynamic> deleteMfaAuthenticator({
    required _i10.AuthenticatorType? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMfaAuthenticator, [], {#type: type}),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> deleteMFAAuthenticator({
    required _i10.AuthenticatorType? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMFAAuthenticator, [], {#type: type}),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.MfaChallenge> createMfaChallenge({
    required _i10.AuthenticationFactor? factor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMfaChallenge, [], {#factor: factor}),
            returnValue: _i6.Future<_i4.MfaChallenge>.value(
              _FakeMfaChallenge_7(
                this,
                Invocation.method(#createMfaChallenge, [], {#factor: factor}),
              ),
            ),
          )
          as _i6.Future<_i4.MfaChallenge>);

  @override
  _i6.Future<_i4.MfaChallenge> createMFAChallenge({
    required _i10.AuthenticationFactor? factor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMFAChallenge, [], {#factor: factor}),
            returnValue: _i6.Future<_i4.MfaChallenge>.value(
              _FakeMfaChallenge_7(
                this,
                Invocation.method(#createMFAChallenge, [], {#factor: factor}),
              ),
            ),
          )
          as _i6.Future<_i4.MfaChallenge>);

  @override
  _i6.Future<_i4.Session> updateMfaChallenge({
    required String? challengeId,
    required String? otp,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMfaChallenge, [], {
              #challengeId: challengeId,
              #otp: otp,
            }),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#updateMfaChallenge, [], {
                  #challengeId: challengeId,
                  #otp: otp,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<_i4.Session> updateMFAChallenge({
    required String? challengeId,
    required String? otp,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMFAChallenge, [], {
              #challengeId: challengeId,
              #otp: otp,
            }),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#updateMFAChallenge, [], {
                  #challengeId: challengeId,
                  #otp: otp,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<_i4.MfaFactors> listMfaFactors() =>
      (super.noSuchMethod(
            Invocation.method(#listMfaFactors, []),
            returnValue: _i6.Future<_i4.MfaFactors>.value(
              _FakeMfaFactors_9(this, Invocation.method(#listMfaFactors, [])),
            ),
          )
          as _i6.Future<_i4.MfaFactors>);

  @override
  _i6.Future<_i4.MfaFactors> listMFAFactors() =>
      (super.noSuchMethod(
            Invocation.method(#listMFAFactors, []),
            returnValue: _i6.Future<_i4.MfaFactors>.value(
              _FakeMfaFactors_9(this, Invocation.method(#listMFAFactors, [])),
            ),
          )
          as _i6.Future<_i4.MfaFactors>);

  @override
  _i6.Future<_i4.MfaRecoveryCodes> getMfaRecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#getMfaRecoveryCodes, []),
            returnValue: _i6.Future<_i4.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_10(
                this,
                Invocation.method(#getMfaRecoveryCodes, []),
              ),
            ),
          )
          as _i6.Future<_i4.MfaRecoveryCodes>);

  @override
  _i6.Future<_i4.MfaRecoveryCodes> getMFARecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#getMFARecoveryCodes, []),
            returnValue: _i6.Future<_i4.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_10(
                this,
                Invocation.method(#getMFARecoveryCodes, []),
              ),
            ),
          )
          as _i6.Future<_i4.MfaRecoveryCodes>);

  @override
  _i6.Future<_i4.MfaRecoveryCodes> createMfaRecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#createMfaRecoveryCodes, []),
            returnValue: _i6.Future<_i4.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_10(
                this,
                Invocation.method(#createMfaRecoveryCodes, []),
              ),
            ),
          )
          as _i6.Future<_i4.MfaRecoveryCodes>);

  @override
  _i6.Future<_i4.MfaRecoveryCodes> createMFARecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#createMFARecoveryCodes, []),
            returnValue: _i6.Future<_i4.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_10(
                this,
                Invocation.method(#createMFARecoveryCodes, []),
              ),
            ),
          )
          as _i6.Future<_i4.MfaRecoveryCodes>);

  @override
  _i6.Future<_i4.MfaRecoveryCodes> updateMfaRecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#updateMfaRecoveryCodes, []),
            returnValue: _i6.Future<_i4.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_10(
                this,
                Invocation.method(#updateMfaRecoveryCodes, []),
              ),
            ),
          )
          as _i6.Future<_i4.MfaRecoveryCodes>);

  @override
  _i6.Future<_i4.MfaRecoveryCodes> updateMFARecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#updateMFARecoveryCodes, []),
            returnValue: _i6.Future<_i4.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_10(
                this,
                Invocation.method(#updateMFARecoveryCodes, []),
              ),
            ),
          )
          as _i6.Future<_i4.MfaRecoveryCodes>);

  @override
  _i6.Future<_i4.User> updateName({required String? name}) =>
      (super.noSuchMethod(
            Invocation.method(#updateName, [], {#name: name}),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(
                this,
                Invocation.method(#updateName, [], {#name: name}),
              ),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.User> updatePassword({
    required String? password,
    String? oldPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [], {
              #password: password,
              #oldPassword: oldPassword,
            }),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(
                this,
                Invocation.method(#updatePassword, [], {
                  #password: password,
                  #oldPassword: oldPassword,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.User> updatePhone({
    required String? phone,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhone, [], {
              #phone: phone,
              #password: password,
            }),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(
                this,
                Invocation.method(#updatePhone, [], {
                  #phone: phone,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.Preferences> getPrefs() =>
      (super.noSuchMethod(
            Invocation.method(#getPrefs, []),
            returnValue: _i6.Future<_i4.Preferences>.value(
              _FakePreferences_11(this, Invocation.method(#getPrefs, [])),
            ),
          )
          as _i6.Future<_i4.Preferences>);

  @override
  _i6.Future<_i4.User> updatePrefs({required Map<dynamic, dynamic>? prefs}) =>
      (super.noSuchMethod(
            Invocation.method(#updatePrefs, [], {#prefs: prefs}),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(
                this,
                Invocation.method(#updatePrefs, [], {#prefs: prefs}),
              ),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.Token> createRecovery({
    required String? email,
    required String? url,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createRecovery, [], {#email: email, #url: url}),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#createRecovery, [], {
                  #email: email,
                  #url: url,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);

  @override
  _i6.Future<_i4.Token> updateRecovery({
    required String? userId,
    required String? secret,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateRecovery, [], {
              #userId: userId,
              #secret: secret,
              #password: password,
            }),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#updateRecovery, [], {
                  #userId: userId,
                  #secret: secret,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);

  @override
  _i6.Future<_i4.SessionList> listSessions() =>
      (super.noSuchMethod(
            Invocation.method(#listSessions, []),
            returnValue: _i6.Future<_i4.SessionList>.value(
              _FakeSessionList_13(this, Invocation.method(#listSessions, [])),
            ),
          )
          as _i6.Future<_i4.SessionList>);

  @override
  _i6.Future<dynamic> deleteSessions() =>
      (super.noSuchMethod(
            Invocation.method(#deleteSessions, []),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.Session> createAnonymousSession() =>
      (super.noSuchMethod(
            Invocation.method(#createAnonymousSession, []),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#createAnonymousSession, []),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<_i4.Session> createEmailPasswordSession({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createEmailPasswordSession, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#createEmailPasswordSession, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<_i4.Session> updateMagicURLSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMagicURLSession, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#updateMagicURLSession, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<dynamic> createOAuth2Session({
    required _i10.OAuthProvider? provider,
    String? success,
    String? failure,
    List<String>? scopes,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOAuth2Session, [], {
              #provider: provider,
              #success: success,
              #failure: failure,
              #scopes: scopes,
            }),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.Session> updatePhoneSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneSession, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#updatePhoneSession, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<_i4.Session> createSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createSession, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#createSession, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<_i4.Session> getSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#getSession, [], {#sessionId: sessionId}),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#getSession, [], {#sessionId: sessionId}),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<_i4.Session> updateSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#updateSession, [], {#sessionId: sessionId}),
            returnValue: _i6.Future<_i4.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#updateSession, [], {#sessionId: sessionId}),
              ),
            ),
          )
          as _i6.Future<_i4.Session>);

  @override
  _i6.Future<dynamic> deleteSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSession, [], {#sessionId: sessionId}),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.User> updateStatus() =>
      (super.noSuchMethod(
            Invocation.method(#updateStatus, []),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_2(this, Invocation.method(#updateStatus, [])),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<_i4.Target> createPushTarget({
    required String? targetId,
    required String? identifier,
    String? providerId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPushTarget, [], {
              #targetId: targetId,
              #identifier: identifier,
              #providerId: providerId,
            }),
            returnValue: _i6.Future<_i4.Target>.value(
              _FakeTarget_14(
                this,
                Invocation.method(#createPushTarget, [], {
                  #targetId: targetId,
                  #identifier: identifier,
                  #providerId: providerId,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Target>);

  @override
  _i6.Future<_i4.Target> updatePushTarget({
    required String? targetId,
    required String? identifier,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePushTarget, [], {
              #targetId: targetId,
              #identifier: identifier,
            }),
            returnValue: _i6.Future<_i4.Target>.value(
              _FakeTarget_14(
                this,
                Invocation.method(#updatePushTarget, [], {
                  #targetId: targetId,
                  #identifier: identifier,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Target>);

  @override
  _i6.Future<dynamic> deletePushTarget({required String? targetId}) =>
      (super.noSuchMethod(
            Invocation.method(#deletePushTarget, [], {#targetId: targetId}),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.Token> createEmailToken({
    required String? userId,
    required String? email,
    bool? phrase,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createEmailToken, [], {
              #userId: userId,
              #email: email,
              #phrase: phrase,
            }),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#createEmailToken, [], {
                  #userId: userId,
                  #email: email,
                  #phrase: phrase,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);

  @override
  _i6.Future<_i4.Token> createMagicURLToken({
    required String? userId,
    required String? email,
    String? url,
    bool? phrase,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMagicURLToken, [], {
              #userId: userId,
              #email: email,
              #url: url,
              #phrase: phrase,
            }),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#createMagicURLToken, [], {
                  #userId: userId,
                  #email: email,
                  #url: url,
                  #phrase: phrase,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);

  @override
  _i6.Future<dynamic> createOAuth2Token({
    required _i10.OAuthProvider? provider,
    String? success,
    String? failure,
    List<String>? scopes,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOAuth2Token, [], {
              #provider: provider,
              #success: success,
              #failure: failure,
              #scopes: scopes,
            }),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.Token> createPhoneToken({
    required String? userId,
    required String? phone,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPhoneToken, [], {
              #userId: userId,
              #phone: phone,
            }),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#createPhoneToken, [], {
                  #userId: userId,
                  #phone: phone,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);

  @override
  _i6.Future<_i4.Token> createVerification({required String? url}) =>
      (super.noSuchMethod(
            Invocation.method(#createVerification, [], {#url: url}),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#createVerification, [], {#url: url}),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);

  @override
  _i6.Future<_i4.Token> updateVerification({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateVerification, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#updateVerification, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);

  @override
  _i6.Future<_i4.Token> createPhoneVerification() =>
      (super.noSuchMethod(
            Invocation.method(#createPhoneVerification, []),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#createPhoneVerification, []),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);

  @override
  _i6.Future<_i4.Token> updatePhoneVerification({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneVerification, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i4.Token>.value(
              _FakeToken_12(
                this,
                Invocation.method(#updatePhoneVerification, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Token>);
}

/// A class which mocks [Databases].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabases extends _i1.Mock implements _i9.Databases {
  MockDatabases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_1(this, Invocation.getter(#client)),
          )
          as _i3.Client);

  @override
  _i6.Future<_i4.DocumentList> listDocuments({
    required String? databaseId,
    required String? collectionId,
    List<String>? queries,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listDocuments, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #queries: queries,
            }),
            returnValue: _i6.Future<_i4.DocumentList>.value(
              _FakeDocumentList_15(
                this,
                Invocation.method(#listDocuments, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #queries: queries,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.DocumentList>);

  @override
  _i6.Future<_i4.Document> createDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    required Map<dynamic, dynamic>? data,
    List<String>? permissions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #data: data,
              #permissions: permissions,
            }),
            returnValue: _i6.Future<_i4.Document>.value(
              _FakeDocument_16(
                this,
                Invocation.method(#createDocument, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #data: data,
                  #permissions: permissions,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Document>);

  @override
  _i6.Future<_i4.Document> getDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    List<String>? queries,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #queries: queries,
            }),
            returnValue: _i6.Future<_i4.Document>.value(
              _FakeDocument_16(
                this,
                Invocation.method(#getDocument, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #queries: queries,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Document>);

  @override
  _i6.Future<_i4.Document> upsertDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    required Map<dynamic, dynamic>? data,
    List<String>? permissions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#upsertDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #data: data,
              #permissions: permissions,
            }),
            returnValue: _i6.Future<_i4.Document>.value(
              _FakeDocument_16(
                this,
                Invocation.method(#upsertDocument, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #data: data,
                  #permissions: permissions,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Document>);

  @override
  _i6.Future<_i4.Document> updateDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    Map<dynamic, dynamic>? data,
    List<String>? permissions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #data: data,
              #permissions: permissions,
            }),
            returnValue: _i6.Future<_i4.Document>.value(
              _FakeDocument_16(
                this,
                Invocation.method(#updateDocument, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #data: data,
                  #permissions: permissions,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Document>);

  @override
  _i6.Future<dynamic> deleteDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
            }),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.Document> decrementDocumentAttribute({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    required String? attribute,
    double? value,
    double? min,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#decrementDocumentAttribute, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #attribute: attribute,
              #value: value,
              #min: min,
            }),
            returnValue: _i6.Future<_i4.Document>.value(
              _FakeDocument_16(
                this,
                Invocation.method(#decrementDocumentAttribute, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #attribute: attribute,
                  #value: value,
                  #min: min,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Document>);

  @override
  _i6.Future<_i4.Document> incrementDocumentAttribute({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    required String? attribute,
    double? value,
    double? max,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#incrementDocumentAttribute, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #attribute: attribute,
              #value: value,
              #max: max,
            }),
            returnValue: _i6.Future<_i4.Document>.value(
              _FakeDocument_16(
                this,
                Invocation.method(#incrementDocumentAttribute, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #attribute: attribute,
                  #value: value,
                  #max: max,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Document>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i4.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get $id =>
      (super.noSuchMethod(
            Invocation.getter(#$id),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#$id)),
          )
          as String);

  @override
  String get $createdAt =>
      (super.noSuchMethod(
            Invocation.getter(#$createdAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#$createdAt),
            ),
          )
          as String);

  @override
  String get $updatedAt =>
      (super.noSuchMethod(
            Invocation.getter(#$updatedAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#$updatedAt),
            ),
          )
          as String);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#name)),
          )
          as String);

  @override
  String get registration =>
      (super.noSuchMethod(
            Invocation.getter(#registration),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#registration),
            ),
          )
          as String);

  @override
  bool get status =>
      (super.noSuchMethod(Invocation.getter(#status), returnValue: false)
          as bool);

  @override
  List<String> get labels =>
      (super.noSuchMethod(Invocation.getter(#labels), returnValue: <String>[])
          as List<String>);

  @override
  String get passwordUpdate =>
      (super.noSuchMethod(
            Invocation.getter(#passwordUpdate),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#passwordUpdate),
            ),
          )
          as String);

  @override
  String get email =>
      (super.noSuchMethod(
            Invocation.getter(#email),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
          )
          as String);

  @override
  String get phone =>
      (super.noSuchMethod(
            Invocation.getter(#phone),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#phone),
            ),
          )
          as String);

  @override
  bool get emailVerification =>
      (super.noSuchMethod(
            Invocation.getter(#emailVerification),
            returnValue: false,
          )
          as bool);

  @override
  bool get phoneVerification =>
      (super.noSuchMethod(
            Invocation.getter(#phoneVerification),
            returnValue: false,
          )
          as bool);

  @override
  bool get mfa =>
      (super.noSuchMethod(Invocation.getter(#mfa), returnValue: false) as bool);

  @override
  _i4.Preferences get prefs =>
      (super.noSuchMethod(
            Invocation.getter(#prefs),
            returnValue: _FakePreferences_11(this, Invocation.getter(#prefs)),
          )
          as _i4.Preferences);

  @override
  List<_i4.Target> get targets =>
      (super.noSuchMethod(
            Invocation.getter(#targets),
            returnValue: <_i4.Target>[],
          )
          as List<_i4.Target>);

  @override
  String get accessedAt =>
      (super.noSuchMethod(
            Invocation.getter(#accessedAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#accessedAt),
            ),
          )
          as String);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Session].
///
/// See the documentation for Mockito's code generation for more information.
class MockSession extends _i1.Mock implements _i4.Session {
  MockSession() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get $id =>
      (super.noSuchMethod(
            Invocation.getter(#$id),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#$id)),
          )
          as String);

  @override
  String get $createdAt =>
      (super.noSuchMethod(
            Invocation.getter(#$createdAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#$createdAt),
            ),
          )
          as String);

  @override
  String get $updatedAt =>
      (super.noSuchMethod(
            Invocation.getter(#$updatedAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#$updatedAt),
            ),
          )
          as String);

  @override
  String get userId =>
      (super.noSuchMethod(
            Invocation.getter(#userId),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#userId),
            ),
          )
          as String);

  @override
  String get expire =>
      (super.noSuchMethod(
            Invocation.getter(#expire),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#expire),
            ),
          )
          as String);

  @override
  String get provider =>
      (super.noSuchMethod(
            Invocation.getter(#provider),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#provider),
            ),
          )
          as String);

  @override
  String get providerUid =>
      (super.noSuchMethod(
            Invocation.getter(#providerUid),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#providerUid),
            ),
          )
          as String);

  @override
  String get providerAccessToken =>
      (super.noSuchMethod(
            Invocation.getter(#providerAccessToken),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#providerAccessToken),
            ),
          )
          as String);

  @override
  String get providerAccessTokenExpiry =>
      (super.noSuchMethod(
            Invocation.getter(#providerAccessTokenExpiry),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#providerAccessTokenExpiry),
            ),
          )
          as String);

  @override
  String get providerRefreshToken =>
      (super.noSuchMethod(
            Invocation.getter(#providerRefreshToken),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#providerRefreshToken),
            ),
          )
          as String);

  @override
  String get ip =>
      (super.noSuchMethod(
            Invocation.getter(#ip),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#ip)),
          )
          as String);

  @override
  String get osCode =>
      (super.noSuchMethod(
            Invocation.getter(#osCode),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#osCode),
            ),
          )
          as String);

  @override
  String get osName =>
      (super.noSuchMethod(
            Invocation.getter(#osName),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#osName),
            ),
          )
          as String);

  @override
  String get osVersion =>
      (super.noSuchMethod(
            Invocation.getter(#osVersion),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#osVersion),
            ),
          )
          as String);

  @override
  String get clientType =>
      (super.noSuchMethod(
            Invocation.getter(#clientType),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#clientType),
            ),
          )
          as String);

  @override
  String get clientCode =>
      (super.noSuchMethod(
            Invocation.getter(#clientCode),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#clientCode),
            ),
          )
          as String);

  @override
  String get clientName =>
      (super.noSuchMethod(
            Invocation.getter(#clientName),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#clientName),
            ),
          )
          as String);

  @override
  String get clientVersion =>
      (super.noSuchMethod(
            Invocation.getter(#clientVersion),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#clientVersion),
            ),
          )
          as String);

  @override
  String get clientEngine =>
      (super.noSuchMethod(
            Invocation.getter(#clientEngine),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#clientEngine),
            ),
          )
          as String);

  @override
  String get clientEngineVersion =>
      (super.noSuchMethod(
            Invocation.getter(#clientEngineVersion),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#clientEngineVersion),
            ),
          )
          as String);

  @override
  String get deviceName =>
      (super.noSuchMethod(
            Invocation.getter(#deviceName),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#deviceName),
            ),
          )
          as String);

  @override
  String get deviceBrand =>
      (super.noSuchMethod(
            Invocation.getter(#deviceBrand),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#deviceBrand),
            ),
          )
          as String);

  @override
  String get deviceModel =>
      (super.noSuchMethod(
            Invocation.getter(#deviceModel),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#deviceModel),
            ),
          )
          as String);

  @override
  String get countryCode =>
      (super.noSuchMethod(
            Invocation.getter(#countryCode),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#countryCode),
            ),
          )
          as String);

  @override
  String get countryName =>
      (super.noSuchMethod(
            Invocation.getter(#countryName),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#countryName),
            ),
          )
          as String);

  @override
  bool get current =>
      (super.noSuchMethod(Invocation.getter(#current), returnValue: false)
          as bool);

  @override
  List<String> get factors =>
      (super.noSuchMethod(Invocation.getter(#factors), returnValue: <String>[])
          as List<String>);

  @override
  String get secret =>
      (super.noSuchMethod(
            Invocation.getter(#secret),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#secret),
            ),
          )
          as String);

  @override
  String get mfaUpdatedAt =>
      (super.noSuchMethod(
            Invocation.getter(#mfaUpdatedAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#mfaUpdatedAt),
            ),
          )
          as String);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Document].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocument extends _i1.Mock implements _i4.Document {
  MockDocument() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get $id =>
      (super.noSuchMethod(
            Invocation.getter(#$id),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#$id)),
          )
          as String);

  @override
  int get $sequence =>
      (super.noSuchMethod(Invocation.getter(#$sequence), returnValue: 0)
          as int);

  @override
  String get $collectionId =>
      (super.noSuchMethod(
            Invocation.getter(#$collectionId),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#$collectionId),
            ),
          )
          as String);

  @override
  String get $databaseId =>
      (super.noSuchMethod(
            Invocation.getter(#$databaseId),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#$databaseId),
            ),
          )
          as String);

  @override
  String get $createdAt =>
      (super.noSuchMethod(
            Invocation.getter(#$createdAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#$createdAt),
            ),
          )
          as String);

  @override
  String get $updatedAt =>
      (super.noSuchMethod(
            Invocation.getter(#$updatedAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#$updatedAt),
            ),
          )
          as String);

  @override
  List<String> get $permissions =>
      (super.noSuchMethod(
            Invocation.getter(#$permissions),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  Map<String, dynamic> get data =>
      (super.noSuchMethod(
            Invocation.getter(#data),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  T convertTo<T>(T Function(Map<String, dynamic>)? fromJson) =>
      (super.noSuchMethod(
            Invocation.method(#convertTo, [fromJson]),
            returnValue: _i5.dummyValue<T>(
              this,
              Invocation.method(#convertTo, [fromJson]),
            ),
          )
          as T);
}
